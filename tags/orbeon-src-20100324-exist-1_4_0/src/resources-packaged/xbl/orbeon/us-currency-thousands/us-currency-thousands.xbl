<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2009 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xhtml="http://www.w3.org/1999/xhtml"
         xmlns:xforms="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
         xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl">

    <!--
        Component to represent a US currency with 3 digits after the decimal point (e.g. value is in thousands).
     -->
    <xbl:binding id="fr-us-currency-thousands" element="fr|us-currency-thousands">

        <!-- Orbeon Form Builder Component Metadata -->
        <metadata xmlns="http://orbeon.org/oxf/xml/form-builder">
            <display-name lang="en">Dollars (Thousand)</display-name>
            <display-name lang="fr">Milliers de dollars</display-name>
            <icon lang="en">
                <small-icon>/apps/fr/style/images/silk/money_dollar.png</small-icon>
                <large-icon>/apps/fr/style/images/silk/money_dollar.png</large-icon>
            </icon>
            <datatype>xforms:decimal</datatype>
            <template>
                 <fr:us-currency-thousands>
                     <xforms:label ref=""/>
                     <xforms:hint ref=""/>
                     <xforms:help ref=""/>
                     <xforms:alert ref=""/>
                </fr:us-currency-thousands>
            </template>
        </metadata>

        <xbl:resources>
            <xbl:style>
                <!-- This is not very elegant but we need a strong rule to override the FR defaults -->
                #doc4 .fr-grid .fr-grid-td .fr-grid-content .xbl-fr-us-currency-thousands .fr-component-group .xforms-input input { width: 6em }
            </xbl:style>
        </xbl:resources>
        <xbl:implementation>
            <!-- Local model -->
            <xforms:model id="currency-model">
                <xforms:instance id="currency-instance">
                    <value/>
                </xforms:instance>
                <xforms:bind nodeset="." constraint="substring-after(., '$') castable as xs:decimal"/>
                <!-- FR HACK: Make instance read-only when the form must be read-only -->
                <xforms:bind nodeset="." readonly="xxforms:instance('fr-parameters-instance')/mode = ('view', 'pdf', 'email')"/>
            </xforms:model>
        </xbl:implementation>
        <xbl:template>
            <!-- Local controls -->
            <xforms:group xbl:attr="model context ref bind" xxbl:scope="outer">
                <xbl:content includes="xforms|label,xforms|help,xforms|hint,xforms|alert"/>

                <!-- Inner group -->
                <xforms:group class="fr-component-group" xxbl:scope="inner">
                    <!-- Variable pointing to external single-node binding -->
                    <xxforms:variable name="result" as="node()?">
                        <xxforms:sequence select="." xxbl:scope="outer"/>
                    </xxforms:variable>

                    <!-- React to update to bound node -->
                    <xforms:group ref="$result" appearance="xxforms:internal">
                        <!-- Only set local values if the bound node is an xs:decimal -->
                        <xforms:action ev:event="xforms-value-changed xforms-enabled">
                            <xforms:setvalue ref="instance('currency-instance')" value="if ($result castable as xs:decimal) then format-number($result, '$ #.000') else $result"/>
                        </xforms:action>
                    </xforms:group>

                    <xforms:input ref="$result" id="currency-input" xbl:attr="navindex navindex=tabindex">
                        <!-- React to update to local values -->
                        <xforms:action ev:event="xforms-value-changed">
                            <xxforms:variable name="currency-normalized" select="normalize-space(.)" as="xs:string"/>
                            <xxforms:variable name="currency-no-dollar" select="if (starts-with($currency-normalized, '$')) then substring-after($currency-normalized, '$') else $currency-normalized" as="xs:string"/>
                            <xforms:setvalue ref="$result" value="if ($currency-no-dollar castable as xs:decimal) then xs:decimal($currency-no-dollar) else $currency-no-dollar"/>
                        </xforms:action>
                    </xforms:input>

                    <!-- Stop propagation of all UI events -->
                    <xforms:action ev:event="#all" ev:propagate="stop"/>
                </xforms:group>

            </xforms:group>
        </xbl:template>
    </xbl:binding>

</xbl:xbl>