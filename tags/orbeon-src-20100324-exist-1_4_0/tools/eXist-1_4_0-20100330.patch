Index: src/org/exist/http/urlrewrite/RewriteConfig.java
===================================================================
--- src/org/exist/http/urlrewrite/RewriteConfig.java	(revision 11586)
+++ src/org/exist/http/urlrewrite/RewriteConfig.java	(working copy)
@@ -207,7 +207,7 @@
     }
 
     private Document parseConfig(File file) throws ParserConfigurationException, SAXException, IOException {
-        SAXParserFactory factory = SAXParserFactory.newInstance();
+        SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
         factory.setNamespaceAware(true);
         InputSource src = new InputSource(new FileInputStream(file));
         SAXParser parser = factory.newSAXParser();
Index: src/org/exist/http/RESTServer.java
===================================================================
--- src/org/exist/http/RESTServer.java	(revision 11586)
+++ src/org/exist/http/RESTServer.java	(working copy)
@@ -803,7 +803,7 @@
 
 	private ElementImpl parseXML(String content, NamespaceExtractor nsExtractor) throws ParserConfigurationException, SAXException, IOException
 	{
-		SAXParserFactory factory = SAXParserFactory.newInstance();
+		SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 		factory.setNamespaceAware(true);
 		InputSource src = new InputSource(new StringReader(content));
 		SAXParser parser = factory.newSAXParser();
Index: src/org/exist/http/SOAPServer.java
===================================================================
--- src/org/exist/http/SOAPServer.java	(revision 11586)
+++ src/org/exist/http/SOAPServer.java	(working copy)
@@ -725,7 +725,7 @@
 	private Document BuildXMLDocument(byte[] buf) throws SAXException, ParserConfigurationException, IOException
 	{
 		//try and construct xml document from input stream, we use eXist's in-memory DOM implementation
-		SAXParserFactory factory = SAXParserFactory.newInstance();
+		SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 		factory.setNamespaceAware(true);	
 		//TODO we should be able to cope with context.getBaseURI()				
 		InputSource src = new InputSource(new ByteArrayInputStream(buf));
Index: src/org/exist/http/Descriptor.java
===================================================================
--- src/org/exist/http/Descriptor.java	(revision 11586)
+++ src/org/exist/http/Descriptor.java	(working copy)
@@ -121,7 +121,7 @@
             // initialize xml parser
             // we use eXist's in-memory DOM implementation to work
             // around a bug in Xerces
-            SAXParserFactory factory = SAXParserFactory.newInstance();
+            SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
             factory.setNamespaceAware(true);
             
             InputSource src = new InputSource(is);
Index: src/org/exist/validation/GrammarPool.java
===================================================================
--- src/org/exist/validation/GrammarPool.java	(revision 11586)
+++ src/org/exist/validation/GrammarPool.java	(working copy)
@@ -22,10 +22,10 @@
 package org.exist.validation;
 
 import org.apache.log4j.Logger;
-import org.apache.xerces.util.XMLGrammarPoolImpl;
-import org.apache.xerces.xni.grammars.Grammar;
-import org.apache.xerces.xni.grammars.XMLGrammarDescription;
-import org.apache.xerces.xni.grammars.XMLGrammarPool;
+import orbeon.apache.xerces.util.XMLGrammarPoolImpl;
+import orbeon.apache.xerces.xni.grammars.Grammar;
+import orbeon.apache.xerces.xni.grammars.XMLGrammarDescription;
+import orbeon.apache.xerces.xni.grammars.XMLGrammarPool;
 import org.exist.Namespaces;
 
 /**
@@ -34,10 +34,10 @@
  *
  * @author Dannes Wessels (dizzzz@exist-db.org)
  *
- * @see org.apache.xerces.xni.grammars.XMLGrammarPool
- * @see org.apache.xerces.util.XMLGrammarPoolImpl
- * @see org.apache.xerces.xni.grammars.Grammar
- * @see org.apache.xerces.xni.grammars.XMLGrammarDescription
+ * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool
+ * @see orbeon.apache.xerces.util.XMLGrammarPoolImpl
+ * @see orbeon.apache.xerces.xni.grammars.Grammar
+ * @see orbeon.apache.xerces.xni.grammars.XMLGrammarDescription
  */
 public class GrammarPool implements XMLGrammarPool {
     
@@ -70,10 +70,10 @@
      * by a validator before the validation starts. the application can provide 
      * an initial set of grammars available to the current validation attempt.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#retrieveInitialGrammarSet(String)
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#retrieveInitialGrammarSet(String)
      * 
      * @param   type  The type of the grammar, from the 
-     *          org.apache.xerces.xni.grammars.Grammar interface.
+     *          orbeon.apache.xerces.xni.grammars.Grammar interface.
      * @return  The set of grammars the validator may put in its "bucket"
      */
     public Grammar[] retrieveInitialGrammarSet(String type) {
@@ -89,7 +89,7 @@
     /**
      *  Return the final set of grammars that the validator ended up with.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#cacheGrammars(String,Grammar[])
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#cacheGrammars(String,Grammar[])
      * 
      * @param type      The type of the grammars being returned
      * @param grammar   an array containing the set of grammars being 
@@ -106,7 +106,7 @@
      * cacheGrammars(String, Grammar[]) method is called. This is the default 
      * state of the object.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#unlockPool
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#unlockPool
      */
     public void unlockPool() {
         if (logger.isDebugEnabled())
@@ -121,7 +121,7 @@
      * EntityResolver. An application must not call its EntityResolver itself 
      * from this method; this may result in infinite recursions.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#retrieveGrammar(XMLGrammarDescription)
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#retrieveGrammar(XMLGrammarDescription)
      *
      * @param xgd    The description of the Grammar being requested.
      * @return       the Grammar corresponding to this description or null 
@@ -152,7 +152,7 @@
      *  Causes the XMLGrammarPool not to store any grammars when the 
      * cacheGrammars(String, Grammar[[]) method is called.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#lockPool
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#lockPool
      */
     public void lockPool() {
         if (logger.isDebugEnabled())
@@ -163,7 +163,7 @@
     /**
      *  Removes all grammars from the pool.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#clear
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#clear
      */
     public void clear() {
         if (logger.isDebugEnabled())
@@ -174,7 +174,7 @@
     /**
      *  Removes all DTD grammars from the pool. Workaround for Xerces bug.
      *
-     * @see org.apache.xerces.xni.grammars.XMLGrammarPool#clear
+     * @see orbeon.apache.xerces.xni.grammars.XMLGrammarPool#clear
      */
     public void clearDTDs() {
         //if (logger.isDebugEnabled())
Index: src/org/exist/validation/resolver/SearchResourceResolver.java
===================================================================
--- src/org/exist/validation/resolver/SearchResourceResolver.java	(revision 11586)
+++ src/org/exist/validation/resolver/SearchResourceResolver.java	(working copy)
@@ -27,10 +27,10 @@
 import java.net.URL;
 
 import org.apache.log4j.Logger;
-import org.apache.xerces.xni.XMLResourceIdentifier;
-import org.apache.xerces.xni.XNIException;
-import org.apache.xerces.xni.parser.XMLEntityResolver;
-import org.apache.xerces.xni.parser.XMLInputSource;
+import orbeon.apache.xerces.xni.XMLResourceIdentifier;
+import orbeon.apache.xerces.xni.XNIException;
+import orbeon.apache.xerces.xni.parser.XMLEntityResolver;
+import orbeon.apache.xerces.xni.parser.XMLInputSource;
 import org.exist.security.SecurityManager;
 import org.exist.security.User;
 import org.exist.storage.BrokerPool;
Index: src/org/exist/validation/resolver/AnyUriResolver.java
===================================================================
--- src/org/exist/validation/resolver/AnyUriResolver.java	(revision 11586)
+++ src/org/exist/validation/resolver/AnyUriResolver.java	(working copy)
@@ -28,10 +28,10 @@
 
 import org.apache.log4j.Logger;
 
-import org.apache.xerces.xni.XMLResourceIdentifier;
-import org.apache.xerces.xni.XNIException;
-import org.apache.xerces.xni.parser.XMLEntityResolver;
-import org.apache.xerces.xni.parser.XMLInputSource;
+import orbeon.apache.xerces.xni.XMLResourceIdentifier;
+import orbeon.apache.xerces.xni.XNIException;
+import orbeon.apache.xerces.xni.parser.XMLEntityResolver;
+import orbeon.apache.xerces.xni.parser.XMLInputSource;
 
 import org.exist.protocolhandler.embedded.EmbeddedInputStream;
 import org.exist.protocolhandler.xmldb.XmldbURL;
Index: src/org/exist/validation/resolver/eXistXMLCatalogResolver.java
===================================================================
--- src/org/exist/validation/resolver/eXistXMLCatalogResolver.java	(revision 11586)
+++ src/org/exist/validation/resolver/eXistXMLCatalogResolver.java	(working copy)
@@ -29,17 +29,17 @@
 import java.util.List;
 
 import org.apache.log4j.Logger;
-import org.apache.xerces.util.XMLCatalogResolver;
-import org.apache.xerces.xni.XMLResourceIdentifier;
-import org.apache.xerces.xni.XNIException;
-import org.apache.xerces.xni.parser.XMLInputSource;
+import orbeon.apache.xerces.util.XMLCatalogResolver;
+import orbeon.apache.xerces.xni.XMLResourceIdentifier;
+import orbeon.apache.xerces.xni.XNIException;
+import orbeon.apache.xerces.xni.parser.XMLInputSource;
 import org.w3c.dom.ls.LSInput;
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
 
 /**
  *  Wrapper around xerces2's
- *  <a href="http://xerces.apache.org/xerces2-j/javadocs/xerces2/org/apache/xerces/util/XMLCatalogResolver.html"
+ *  <a href="http://xerces.apache.org/xerces2-j/javadocs/xerces2/orbeon.apache.xerces/util/XMLCatalogResolver.html"
  *                                                      >XMLCatalogresolver</a>
  * @author Dannes Wessels (dizzzz@exist-db.org)
  */
@@ -84,7 +84,7 @@
     }
     
     /**
-     * @see org.apache.xerces.util.XMLCatalogResolver#resolveEntity(String, String)
+     * @see orbeon.apache.xerces.util.XMLCatalogResolver#resolveEntity(String, String)
      */
     public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {
         LOG.debug("Resolving publicId='"+publicId+"', systemId='"+systemId+"'");
@@ -134,7 +134,7 @@
     }
     
     /**
-     * @see org.apache.xerces.util.XMLCatalogResolver#resolveResource(String, String, String, String, String)
+     * @see orbeon.apache.xerces.util.XMLCatalogResolver#resolveResource(String, String, String, String, String)
      */
     public LSInput resolveResource(String type, String namespaceURI, String publicId, String systemId, String baseURI) {
         LOG.debug("Resolving type='"+type+"', namespaceURI='"+namespaceURI+"', publicId='"+publicId+"', systemId='"+systemId+"', baseURI='"+baseURI+"'");
@@ -150,7 +150,7 @@
     }
     
     /**
-     * @see org.apache.xerces.util.XMLCatalogResolver#resolveEntity(String, String, String, String)
+     * @see orbeon.apache.xerces.util.XMLCatalogResolver#resolveEntity(String, String, String, String)
      */
     public InputSource resolveEntity(String name, String publicId, String baseURI, String systemId) throws SAXException, IOException {
         LOG.debug("Resolving name='"+name+"', publicId='"+publicId+"', baseURI='"+baseURI+"', systemId='"+systemId+"'");
@@ -166,7 +166,7 @@
     }
     
     /**
-     * @see org.apache.xerces.util.XMLCatalogResolver#resolveIdentifier(XMLResourceIdentifier)
+     * @see orbeon.apache.xerces.util.XMLCatalogResolver#resolveIdentifier(XMLResourceIdentifier)
      */
     public String resolveIdentifier(XMLResourceIdentifier xri) throws IOException, XNIException {
         
@@ -187,7 +187,7 @@
     }
     
     /**
-     * @see org.apache.xerces.util.XMLCatalogResolver#resolveEntity(XMLResourceIdentifier)
+     * @see orbeon.apache.xerces.util.XMLCatalogResolver#resolveEntity(XMLResourceIdentifier)
      */
     public XMLInputSource resolveEntity(XMLResourceIdentifier xri) throws XNIException, IOException {
         if(xri.getExpandedSystemId()==null && xri.getLiteralSystemId()==null && 
@@ -212,7 +212,7 @@
     }
 
     /**
-     * @see org.apache.xerces.util.XMLCatalogResolver#getExternalSubset(String, String)
+     * @see orbeon.apache.xerces.util.XMLCatalogResolver#getExternalSubset(String, String)
      */
     public InputSource getExternalSubset(String name, String baseURI) throws SAXException, IOException {
         LOG.debug("name='"+name+"' baseURI='"+baseURI+"'");
Index: src/org/exist/validation/Validator.java
===================================================================
--- src/org/exist/validation/Validator.java	(revision 11586)
+++ src/org/exist/validation/Validator.java	(working copy)
@@ -265,7 +265,7 @@
             ErrorHandler errorHandler) throws ParserConfigurationException, SAXException {
 
         // setup sax factory ; be sure just one instance!
-        SAXParserFactory saxFactory = SAXParserFactory.newInstance();
+        SAXParserFactory saxFactory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 
         // Enable validation stuff
         saxFactory.setValidating(true);
Index: src/org/exist/validation/XmlLibraryChecker.java
===================================================================
--- src/org/exist/validation/XmlLibraryChecker.java	(revision 11586)
+++ src/org/exist/validation/XmlLibraryChecker.java	(working copy)
@@ -45,7 +45,7 @@
      */
     private final static ClassVersion[] validParsers = {
         new ClassVersion("Xerces", "Xerces-J 2.9.1", 
-                "org.apache.xerces.impl.Version.getVersion()")
+                "orbeon.apache.xerces.impl.Version.getVersion()")
     };
     
     /**
@@ -53,7 +53,7 @@
      */
     private final static ClassVersion[] validTransformers = {
         new ClassVersion("Saxon", "8.9.0", 
-                "net.sf.saxon.Version.getProductVersion()"),
+                "org.orbeon.saxon.Version.getProductVersion()"),
         new ClassVersion("Xalan", "Xalan Java 2.7.1", 
                 "org.apache.xalan.Version.getVersion()"),
     };
Index: src/org/exist/xquery/util/RegexTranslator.java
===================================================================
--- src/org/exist/xquery/util/RegexTranslator.java	(revision 11586)
+++ src/org/exist/xquery/util/RegexTranslator.java	(working copy)
@@ -11,7 +11,7 @@
 
 /**
  * This class translates XML Schema regex syntax into JDK 1.4 regex syntax.
- * Copied from Saxon package net.sf.saxon.type without change. The original 
+ * Copied from Saxon package org.orbeon.saxon.type without change. The original 
  * author is James Clark. See license.
  */
 public class RegexTranslator {
Index: src/org/exist/xquery/functions/request/GetData.java
===================================================================
--- src/org/exist/xquery/functions/request/GetData.java	(revision 11586)
+++ src/org/exist/xquery/functions/request/GetData.java	(working copy)
@@ -165,7 +165,7 @@
 				try
 				{ 
 					//try and construct xml document from input stream, we use eXist's in-memory DOM implementation
-					SAXParserFactory factory = SAXParserFactory.newInstance();
+					SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 					factory.setNamespaceAware(true);
 					//TODO : we should be able to cope with context.getBaseURI()				
 					InputSource src = new InputSource(new ByteArrayInputStream(bufRequestData));
Index: src/org/exist/xquery/functions/util/Eval.java
===================================================================
--- src/org/exist/xquery/functions/util/Eval.java	(revision 11586)
+++ src/org/exist/xquery/functions/util/Eval.java	(working copy)
@@ -453,7 +453,7 @@
 		try {
 			URL url = new URL(uri);
 			InputStreamReader isr = new InputStreamReader(url.openStream(), "UTF-8");
-            SAXParserFactory factory = SAXParserFactory.newInstance();
+            SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
             factory.setNamespaceAware(true);
             InputSource src = new InputSource(isr);
             SAXParser parser = factory.newSAXParser();
Index: src/org/exist/xquery/functions/util/Parse.java
===================================================================
--- src/org/exist/xquery/functions/util/Parse.java	(revision 11586)
+++ src/org/exist/xquery/functions/util/Parse.java	(working copy)
@@ -85,7 +85,7 @@
         }
         StringReader reader = new StringReader(xmlContent);
         try {
-            SAXParserFactory factory = SAXParserFactory.newInstance();
+            SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
             factory.setNamespaceAware(true);
             InputSource src = new InputSource(reader);
 
Index: src/org/exist/xquery/functions/validation/GrammarTooling.java
===================================================================
--- src/org/exist/xquery/functions/validation/GrammarTooling.java	(revision 11586)
+++ src/org/exist/xquery/functions/validation/GrammarTooling.java	(working copy)
@@ -27,10 +27,10 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import org.apache.xerces.parsers.XMLGrammarPreparser;
-import org.apache.xerces.xni.grammars.Grammar;
-import org.apache.xerces.xni.grammars.XMLGrammarDescription;
-import org.apache.xerces.xni.parser.XMLInputSource;
+import orbeon.apache.xerces.parsers.XMLGrammarPreparser;
+import orbeon.apache.xerces.xni.grammars.Grammar;
+import orbeon.apache.xerces.xni.grammars.XMLGrammarDescription;
+import orbeon.apache.xerces.xni.parser.XMLInputSource;
 
 import org.exist.Namespaces;
 import org.exist.dom.QName;
Index: src/org/exist/xquery/functions/validation/Jaxp.java
===================================================================
--- src/org/exist/xquery/functions/validation/Jaxp.java	(revision 11586)
+++ src/org/exist/xquery/functions/validation/Jaxp.java	(working copy)
@@ -37,7 +37,7 @@
 import javax.xml.transform.stream.StreamResult;
 import javax.xml.transform.stream.StreamSource;
 
-import org.apache.xerces.xni.parser.XMLEntityResolver;
+import orbeon.apache.xerces.xni.parser.XMLEntityResolver;
 
 import org.exist.Namespaces;
 import org.exist.dom.QName;
@@ -304,7 +304,7 @@
     private XMLReader getXMLReader() throws ParserConfigurationException, SAXException {
 
         // setup sax factory ; be sure just one instance!
-        SAXParserFactory saxFactory = SAXParserFactory.newInstance();
+        SAXParserFactory saxFactory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 
         // Enable validation stuff
         saxFactory.setValidating(true);
Index: src/org/exist/StandaloneServer.java
===================================================================
--- src/org/exist/StandaloneServer.java	(revision 11586)
+++ src/org/exist/StandaloneServer.java	(working copy)
@@ -420,7 +420,7 @@
         }
         
         // initialize xml parser
-        SAXParserFactory factory = SAXParserFactory.newInstance();
+        SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
         factory.setNamespaceAware(true);
         factory.setValidating(false);
         InputSource src = new InputSource(is);
Index: src/org/exist/storage/serializers/XIncludeFilter.java
===================================================================
--- src/org/exist/storage/serializers/XIncludeFilter.java	(revision 11586)
+++ src/org/exist/storage/serializers/XIncludeFilter.java	(working copy)
@@ -505,7 +505,7 @@
         }
 
         // we use eXist's in-memory DOM implementation
-        SAXParserFactory factory = SAXParserFactory.newInstance();
+        SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
         factory.setNamespaceAware(true);
         InputSource src = new InputSource(con.getInputStream());
         SAXParser parser = factory.newSAXParser();
Index: src/org/exist/backup/Restore.java
===================================================================
--- src/org/exist/backup/Restore.java	(revision 11586)
+++ src/org/exist/backup/Restore.java	(working copy)
@@ -75,7 +75,7 @@
 		if (newAdminPass != null)
 			setAdminCredentials(newAdminPass);
 		
-		SAXParserFactory saxFactory = SAXParserFactory.newInstance();
+		SAXParserFactory saxFactory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 		saxFactory.setNamespaceAware(true);
 		saxFactory.setValidating(false);
 		SAXParser sax = saxFactory.newSAXParser();
Index: src/org/exist/backup/AbstractBackupDescriptor.java
===================================================================
--- src/org/exist/backup/AbstractBackupDescriptor.java	(revision 11586)
+++ src/org/exist/backup/AbstractBackupDescriptor.java	(working copy)
@@ -62,7 +62,7 @@
     }
 
     public void parse(ContentHandler handler) throws IOException, SAXException, ParserConfigurationException {
-        SAXParserFactory saxFactory = SAXParserFactory.newInstance();
+        SAXParserFactory saxFactory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
         saxFactory.setNamespaceAware(true);
         saxFactory.setValidating(false);
         SAXParser sax = saxFactory.newSAXParser();
Index: src/org/exist/xmldb/RemoteXMLResource.java
===================================================================
--- src/org/exist/xmldb/RemoteXMLResource.java	(revision 11586)
+++ src/org/exist/xmldb/RemoteXMLResource.java	(working copy)
@@ -191,7 +191,7 @@
     	
         XMLReader reader = null;
 		if (xmlReader == null) {
-		    SAXParserFactory saxFactory = SAXParserFactory.newInstance();
+		    SAXParserFactory saxFactory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
 		    saxFactory.setNamespaceAware(true);
 		    saxFactory.setValidating(false);
             try {
Index: src/org/exist/util/Configuration.java
===================================================================
--- src/org/exist/util/Configuration.java	(revision 11586)
+++ src/org/exist/util/Configuration.java	(working copy)
@@ -270,7 +270,7 @@
             // initialize xml parser
             // we use eXist's in-memory DOM implementation to work
             // around a bug in Xerces
-            SAXParserFactory factory = SAXParserFactory.newInstance();
+            SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
             factory.setNamespaceAware(true);
 //            factory.setFeature("http://apache.org/xml/features/validation/schema", true);
 //            factory.setFeature("http://apache.org/xml/features/validation/dynamic", true);
Index: src/org/exist/util/MimeTable.java
===================================================================
--- src/org/exist/util/MimeTable.java	(revision 11586)
+++ src/org/exist/util/MimeTable.java	(working copy)
@@ -270,7 +270,7 @@
      * @throws IOException 
      */
     private void loadMimeTypes(InputStream stream) throws ParserConfigurationException, SAXException, IOException {
-        SAXParserFactory factory = SAXParserFactory.newInstance();
+        SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
         factory.setNamespaceAware(true);
         factory.setValidating(false);
         InputSource src = new InputSource(stream);
Index: src/org/exist/util/ExistSAXParserFactory.java
===================================================================
--- src/org/exist/util/ExistSAXParserFactory.java	(revision 11586)
+++ src/org/exist/util/ExistSAXParserFactory.java	(working copy)
@@ -106,7 +106,7 @@
 
         // If no factory could be retrieved, create system default property.
         if (factory == null) {
-            factory = SAXParserFactory.newInstance();
+            factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
         }
 
         return factory;
Index: src/org/exist/util/XMLChar.java
===================================================================
--- src/org/exist/util/XMLChar.java	(revision 11586)
+++ src/org/exist/util/XMLChar.java	(working copy)
@@ -1,6 +1,6 @@
 package org.exist.util;
 
-// Copied without change from Xerces module org.apache.xerces.util.XMLChar, version 2.5.0
+// Copied without change from Xerces module orbeon.apache.xerces.util.XMLChar, version 2.5.0
 
 /*
  * The Apache Software License, Version 1.1
Index: src/org/exist/collections/CollectionConfigurationManager.java
===================================================================
--- src/org/exist/collections/CollectionConfigurationManager.java	(revision 11586)
+++ src/org/exist/collections/CollectionConfigurationManager.java	(working copy)
@@ -146,7 +146,7 @@
      */
     public void testConfiguration(DBBroker broker, String config) throws CollectionConfigurationException {
         try {
-            SAXParserFactory factory = SAXParserFactory.newInstance();
+            SAXParserFactory factory = new org.orbeon.oxf.xml.xerces.XercesSAXParserFactoryImpl();
             factory.setNamespaceAware(true);
             InputSource src = new InputSource(new StringReader(config));
             SAXParser parser = factory.newSAXParser();
