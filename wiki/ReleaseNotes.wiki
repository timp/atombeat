#summary notes on changes between releases

<wiki:toc/>

= 0.2-alpha-5-SNAPSHOT =

= 0.2-alpha-4 =

== issue 81 - reference groups where source is any atom member ==

The way that out-of-line security groups are referenced from a security descriptor has changed. In this release, you can either reference a security group defined in another security descriptor, *or* you can reference a group defined in an Atom collection member. 

To reference a group defined in a security descriptor, use the *security descriptor URI* in the `@src` attribute. E.g.:

{{{
<atombeat:security-descriptor>
     <atombeat:groups>
         <atombeat:group id="admins" src="http://example.org/atombeat/service/security/mycollection/mymember"/>
     </atombeat:groups>
     <atombeat:acl>
     </atombeat:acl>
 </atombeat:security-descriptor>
}}}

To reference a group defined in an Atom collection member, use the *member's edit URI* in the `@src` attribute.

{{{
<atombeat:security-descriptor>
     <atombeat:groups>
         <atombeat:group id="admins" src="http://example.org/atombeat/service/content/mycollection/mymember"/>
     </atombeat:groups>
     <atombeat:acl>
     </atombeat:acl>
 </atombeat:security-descriptor>
}}}

The definition of a group can appear *anywhere* within the member's Atom entry document. I.e., AtomBeat will use the XPath `//atombeat:group[@src='admins']` to find matching groups within the referenced document.

In previous releases, you could only reference groups defined in a security descriptor, and this was done indirectly *via* the URI of the workspace, collection or member whose descriptor you wanted to reference. Upgrading to this release will require that any URIs given in `@src` attributes on `atombeat:group` elements are *changed* to point *directly* to the URI of the security descriptor containing the group definitions.

= 0.2-alpha-3 =

== issue 130 - remove references to request from atomdb xquery module ==

The signature of the following functions has changed:

  * atomdb:create-entry
  * atomdb:create-media-link-entry
  * atomdb:create-feed
  * atomdb:create-member
  * atomdb:create-media-resource
  * atomdb:create-collection
  * atomdb:create-file-backed-media-resource-from-request-data
  * atomdb:create-file-backed-media-resource-from-existing-media-resource
  * atomdb:create-file-backed-media-resource-from-upload
  
An additional parameter `$user-name` has been added to the function signature, to remove some of the dependencies of the `lib/atomdb.xqm` module on the eXist request function module. This change has been made to make testing the `lib/atomdb.xqm` functions easier.

Upgrading to this release will require any custom XQuery modules that call any of the above functions to be modified to use the new function signature.
  
== issue 129 - make atom:id construction configurable ==

A new configuration function `config:construct-member-atom-id()` has been added to the `config/shared.xqm` configuration module. This new function allows customisation of the way in which `atom:id` elements are populated for new collection members.

Upgrading to this release will require this function to be implemented in the `config/shared.xql` configuration module.

If you are using UUIDs as the basis for member identifiers, then you have the option to use UUID URNs for atom:id elements. E.g.,:

{{{
declare function config:generate-identifier(
    $collection-path-info as xs:string
) as xs:string
{
    util:uuid()
};

declare function config:contruct-member-atom-id(
    $identifier as xs:string ,
    $collection-path-info as xs:string
) as xs:string
{
    concat( 'urn:uuid:' , $identifier )
};
}}}

The $identifier parameter passed into this function is obtained from calling the config:generate-identifier() function.

Alternatively, e.g., if you were using shorter identifiers that are not guaranteed to be unique across collections, you could do something like the following:

{{{
declare function config:generate-identifier(
    $collection-path-info as xs:string
) as xs:string
{
    xutil:random-alphanumeric( 6 )
};

declare function config:contruct-member-atom-id(
    $identifier as xs:string ,
    $collection-path-info as xs:string
) as xs:string
{
    concat( $config:self-link-uri-base , $collection-path-info , $identifier )
};
}}} 

== issue 118 - 	implement md5 in @hash link extension attribute for media-link entries ==

If the FILE media storage mode is being used, an MD5 hash will automatically be calculated for every new and updated media resource, and the hash value will be added to the associated media-link entry in a @hash attribute on both the 'edit-media' link and the atom:content element.

This is a backwards compatible change, in that upgrading to this release does not require any migration of the data. However, note that media-link entries created prior to upgrade will not include a @hash attribute. 

== issue 114 - configure self link uri base independently from edit uri base ==

The way in which the URI base for 'self', 'edit' and 'edit-media' links is configured has changed. The variable $config:content-service-url in the config/shared.xqm configuration module has been removed. Three new variables have been added in it's place, being $config:self-link-uri-base, $config:edit-link-uri-base and $config:edit-media-link-uri-base. These new variables allow URI bases for different link types to be configured independently if desired.

Upgrading to this release will require modification of the config/shared.xqm to use the new configuration variables.

= 0.2-alpha-2 =

TODO complete release notes for this version

== issue 24 - provide service documents ==

This release implements Atom Protocol service documents. E.g., if an !AtomBeat service is located at at http://example.org/atombeat/service/ then a GET request to this URI will return an Atom Protocol service document listing available Atom collections.

The title and summary given in the atom:workspace element in the service document are configured using two new variables in the config/shared.xqm configuration module, being $config:workspace-title and $config:workspace-summary.

Upgrading to this release will require modification of the config/shared.xqm to use the new configuration variables.

Note also that collections created prior to upgrading to this release will not initially appear in the service document. They will appear after an update to the collection feed metadata, i.e., after a PUT to the collection URI. 

== issue 97 - remove ".atom" from the end of member URIs ==

In this release the string ".atom" is no longer appending to member URIs. 

This is a major change, and requires that all member URIs present in the database prior to upgrade, e.g., in Atom entry documents, need to be modified following an upgrade to have the ".atom" suffix removed.

Note however that the documents stored in the eXist database still retain the ".atom" suffix, i.e., the documents themselves don't need to be moved.

== issue 99 - TODO ==

== issue 104 - TODO ==

== issue 105 - TODO ==

== issue 106 - migrate workspace to service ==

The default location for the !AtomBeat service in all WAR packages has changed from /workspace to /service. 

All !AtomBeat URIs for resources (collections, members, media) created prior to upgrade will need to be modified to reflect the new URL base.

== issue 111 - upgrade to spring security 3.1 ==

Spring Security in secure WAR packages has been upgraded to 3.1.0.M1.

== issue 112 - TODO ==

== issue 116 - TODO ==

= 0.2-alpha-1 =

== issue 98 - implement tombstones ==

TODO

== issue 100 - error plugins ==

TODO
